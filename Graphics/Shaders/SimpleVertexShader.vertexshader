#version 330 core


layout(location = 0) in vec3 vertexPosition_modelspace;
layout(location = 1) in vec3 vertexColor;
layout(location = 2) in vec2 vertexTex;
layout(location = 3) in vec3 vertexNormal_modelspace;

out vec3 pixelcolor;
out vec2 Tex;
out vec3 normal_worldspace;
out vec3 position_worldspace;

uniform float light_bool;
varying float lightOn;
uniform float texBool;
varying float texOn;

uniform mat4 MVP;

void main(){
	gl_Position = MVP * vec4(vertexPosition_modelspace,1);
	pixelcolor = vertexColor;

	//
	position_worldspace = 
	vec3(MVP * vec4(vertexPosition_modelspace,1));
	//
	normal_worldspace = 
	normalize(vec3(MVP * vec4(vertexPosition_modelspace,0)));

	lightOn = light_bool;

	Tex = vertexTex;
	texOn = texBool;
}


